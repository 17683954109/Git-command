
--------------Git 版本控制------------

1. 本地创建Git仓库

	1）创建文件夹

	2）安装Git工具

	3）打开cmd或git-bash

	4）使用cd切换到你创建的文件夹

	5）cmd或git-bash或bash中输入git init,对仓库进行初始化

	6）创建一个简单的README.md说明文件

	7）命令行输入 git add . 或 git add README.md

	8）命令行输入 git commit -m '提交说明'

	9）关联远程仓库 git remote add 你希望使用的远程仓库标识 远程仓库地址

		例：git remote add test https://github.com/17683954109/Git-command.git

	10）将更改推送到远程仓库 git push 远程仓库标识 远程仓库分支(默认为master)

		例：git push test master

	11) 查看最近的提交 git log
	
	12) 查看当前的状态 git status

2.查看两次提交的不同，更改了那些文件

	1）git log 查看提交日志，包含快照id，就是sha1加密的标识符，有最近提交的提交说明作为标识

	2）git diff 快照id1 快照id2，进入类似vi编辑器的界面，红色为删除的内容，绿色为新增，白色为一些git给出的说明和未发生更改的内容

	3）git reset --hard 快照id 可以将你的文件恢复到这次快照生成时的内容

3.git 的分支

	注意事项:创建分支后，远程仓库的推送也需要改变，例如我在test子分支下做的更改，推送远程仓库时也需要推送到远程仓库的test分支，
	
	你所做的提交和更改，必需明确分支，否则可能会导致你的远程仓库主分支受到影响。

	1）git 的分支可以在主分支不受影响的情况下，创建多分支。

	   当你创建一个新的分支，并切换到该分支，在该分支下做的所有更改，在你切换回主分支时，

	   内容还是之前主分支的内容,Git可以灵活的切换分支，方便我们新功能的单独调试和开发。

	2）如何创建分支: git branch 分支名

		例：git branch test
	
	3）切换分支 : git checkout 分支名

	注: 分支的好处在于，在分支合并之前，子分支如何更改，都不会对主分支产生影响，
	
	例如我切换到test分支，创建了一个test.txt的文件，并将它提交到我的远程仓库的test分支下，
	
	当我切换到主分支时，我的目录中并不会出现test.txt,但我再次切换到test分支，该文件又出现了。

4. git仓库克隆

	1）克隆远程仓库: git clone 远程仓库的地址 存储的文件夹(可选，不填则默认为该远程仓库名)

	2）只克隆某一个分支内容: git clone -b 分支名 远程仓库地址  存储的文件夹(可选)
